name: Deploy Doom Demo

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set Cloudflare API token
        run: echo "CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }}" >> $GITHUB_ENV

      - name: Set Cloudflare Account ID
        run: echo "TF_VAR_account_id=${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" >> $GITHUB_ENV

      - name: Terraform Init
        run: terraform -chdir=infrastructure init

      - name: Terraform Apply
        run: terraform -chdir=infrastructure apply -auto-approve

      - name: Capture Terraform outputs
        run: |
          echo "CLOUDFLARE_SUBDOMAIN_1_SSH=$(terraform -chdir=infrastructure output -raw cloudflare-subdomain-1-ssh)" >> $GITHUB_ENV
          echo "CLOUDFLARE_SUBDOMAIN_2_SSH=$(terraform -chdir=infrastructure output -raw cloudflare-subdomain-2-ssh)" >> $GITHUB_ENV
          echo "CLOUDFLARE_SUBDOMAIN_3_WEB=$(terraform -chdir=infrastructure output -raw cloudflare-subdomain-3-web)" >> $GITHUB_ENV
          echo "AWS_SERVER_USERNAME=$(terraform -chdir=infrastructure output -raw aws-server-username)" >> $GITHUB_ENV
          mkdir -p outputs
          terraform -chdir=infrastructure output -raw aws-ssh-key > outputs/sshkey
          chmod 600 outputs/sshkey

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y software-properties-common
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install -y ansible

      - name: Replace placeholders in inventory.yml
        run: |
          sed -i "s|{{ cloudflare_subdomain_1_ssh }}|${{ env.CLOUDFLARE_SUBDOMAIN_1_SSH }}|g" ansible/inventory.yml
          sed -i "s|{{ cloudflare_subdomain_2_ssh }}|${{ env.CLOUDFLARE_SUBDOMAIN_2_SSH }}|g" ansible/inventory.yml
          sed -i "s|{{ aws_server_username }}|${{ env.AWS_SERVER_USERNAME }}|g" ansible/inventory.yml
          sed -i "s|{{ cloudflare_subdomain_3_web }}|${{ env.CLOUDFLARE_SUBDOMAIN_3_WEB }}|g" ansible/inventory.yml
          sed -i "s|/builds/saucyragu/core-doom-demo/outputs/sshkey|../outputs/sshkey|g" ansible/inventory.yml

      - name: Run Ansible playbook
        run: |
          ansible-playbook -i ansible/inventory.yml ansible/playbook.yml --extra-vars "cloudflare_web_cert='$(terraform -chdir=infrastructure output -raw cloudflare-web-cert)' cloudflare_web_key='$(terraform -chdir=infrastructure output -raw cloudflare-web-key)'"
